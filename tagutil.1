.\"
.\" Copyright (c) 2008-2013
.\"    Alexandre Perrin <alex@kaworu.ch>.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
.\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\" ---------------------------------------------------------------------------
.\"
.\" ---------------------------------------------------------------------------
.\"
.Dd June 26, 2008
.Dt TAGUTIL 1
.Os
.Sh NAME
.Nm tagutil
.Nd edit music files tags
.Sh SYNOPSIS
.Nm
.Op Ar
.Nm
[options]
.Op Ar
.Sh DESCRIPTION
.Nm
displays and changes tags in musics files. It supports ogg, mp3, flac and more
(see taglib documentation).
.Nm
modify tags if asked, then start the edit action if
.Fl e
and finally rename if
.Fl r .
.Sh OPTIONS
.Pp
.Bl -tag -width indent
.It Fl e
edit mode. for each
.Ar file
display its tags and ask to edit them. If response is
.Sq y
or
.Sq yes
,
.Nm
launch your favourite editor ($EDITOR).
.It Fl Y
answer yes to all questions (useful for rename or edit actions). Ignored if no questions are asked.
.It Fl N
answer no to all questions (useful for rename or edit actions). Ignored if no questions are asked.
.It Fl r Ar pattern
rename files with given
.Ar pattern .
The
.Ar pattern
can contain special keywords expanded with file's tag.
confirmation is asked before rename unless
.Fl Y
or
.Fl N
is given.
.Pp
The keywords are as follows:
.Bl -tag -width indent
.It \%%A
artist
.It \%%\%%
litteral \%%
.It \%%a
album
.It \%%c
comment
.It \%%g
genre
.It \%%T
track
.It \%%t
title
.It \%%y
year
.El
.Pp
NOTE: if your pattern (or a tag expanded in your pattern) contains a
.Sq /
character,
.Nm
will check if the destination directory exists. In that case,
.Nm
will rename without any warning and the file's directoy will change. Otherwise
.Nm
will display an error message and exit with
.Er ENOENT
return value unless
.Fl d
is given. If
.Fl d
is given with
.Fl r
then
.Nm
will create any needed directory.
.It Fl d
created directories when rename action is called. Useful when you want to have one directory per artist and/or per album.
.Fl d
is only valid with the
.Fl r
(rename) option.
.It Fl x Ar filter
print to stdout files matching the given
.Ar filter .
.Pp The filter format is a C-like boolean expression, which
keywords are
.Sq album ,
.Sq artist ,
.Sq comment ,
.Sq filename ,
.Sq genre ,
.Sq title ,
.Sq track
and
.Sq year .
.Sq track
and
.Sq year
keywords are integers, while others are strings.
.Pp
A static integer is a number like 42, 0 or 1024. Since integer keywords (i.e
.Sq year
and
.Sq track )
are unsigned, negative integer are not allowed.
.Pp
A static string begins and ends with the " character (like in the C programming
language) and you can escape " and \\ by writting \\" and \\\\.
.Pp
A regular expression begins and ends with the / character (like in Perl or
Ruby programming languages) and you can escape / and \\ by writting \\/ and \\\\.
.Nm
support two modifiers on regular expressions:
.Pp
.Bl -tag -width indent
.It Sq i
case insensitive match. compile the regular expression with the
.Dv REG_ICASE
flag (see
.Xr regex 3 ) .
.It Sq m
newline-sensitive match. compile the regular expression with the
.Dv REG_NEWLINE
flag (see
.Xr regex 3 ) .
.El
.Pp
As in the C programming language, && and || are left associatif and && has a highest precedance than ||.
.Pp
You can see the full formal filter's grammar in the
.Pa t_parser.h
source file of tagutil. Here follows an informal description:
.Bl -tag -width indent
.It expr0 || expr1
true if
.Sq expr0
is true or if
.Sq expr1
is true.
.It expr0 && expr1
true if
.Sq expr0
is true and if
.Sq expr1
is true.
.It keyword == value0
true if
.Sq keyword
is equal to
.Sq value0 .
if
.Sq keyword
is an integer value,
.Sq value0
has to be a static integer.
if
.Sq keyword
is a string value,
.Sq value0
can be another string keyword, or a static string.
return true if
.Sq keyword
equals
.Sq value .
for string, a case-sensitive comparison is used (see
.Xr strcmp 3 ) .
.It keyword < value0
return true if
.Sq keyword
is lower than
.Sq value0 .
.It keyword <= value0
return true if
.Sq keyword
is lower or equals to than
.Sq value0 .
.It keyword > value0
return true if
.Sq keyword
is greater than
.Sq value0 .
.It keyword >= value0
return true if
.Sq keyword
is greater or equals than
.Sq value0 .
.It keyword != value0
return true if
.Sq keyword
is different from
.Sq value0 .
.It keyword =~ regex0
return true if
.Sq keyword
match
.Sq regex0 .
.Sq keyword
has to be a string keyword.
.It ( expr0 )
override operator precedence.
.Sq expr0
will be evaluated first regardless of the operators precedance and
associativity.
.It !(expr0)
true if
.Sq expr0
is false, false otherwise.
.El
.Pp
Comparison operators are not commutatif, then you can't write
.Dl 1 == track
for example, write
.Dl track == 1
instead.
.It Fl A Ar artist-name
set
.Sq artist
tag to
.Ar artist-name .
.It Fl a Ar album-name
set
.Sq album
tag to
.Ar album-name .
.It Fl c Ar a-comment
set
.Sq comment
tag to
.Ar a-comment .
.It Fl g Ar a-genre
set
.Sq genre
tag to
.Ar a-genre
.It Fl T Ar track-no
set
.Sq track
tag to
.Ar track-no
.It Fl t Ar a-title
set
.Sq title
tag to
.Ar a-title
.It Fl y Ar year-no
set
.Sq year
tag to
.Ar year-no
.El
.Sh ENVIRONMENT
The
.Ev LC_ALL, EDITOR
and
.Ev TMPDIR
environment variables affect the execution of
.Nm .
.Bl -tag -width indent
.It Ev LC_ALL
used to set the taglib encoding for reading and setting tags.
.It Ev EDITOR
used when the
.Sq Fl e
option is given.
.It Ev TMPDIR
used to store a temporary file when
.Sq Fl e
option is given.
.El
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
print the tags of file.flac:
.Dl Nm Ar file.flac
.Pp
interactivly edit the file.flac's tags:
.Dl Nm Fl e Ar file.flac
.Pp
rename all your music files in the current directory to "artist - album - [track] - title":
.Dl Nm Fl r Ar '%A - %a - [%T] - %t' *
.Pp
find all the files created after 2004:
.Dl Nm Fl x Ar 'year >= 2004' *
.Pp
find the files that belongs to an album of the same name of their artist:
.Dl Nm Fl x Ar 'artist == album' *
.Pp
find music of the 60':
.Dl Nm Fl x Ar 'year >= 1960 && year < 1970' *
.Pp
find all Pink Floyd's music, or live music older than 1970:
.Dl Nm Fl x Ar 'artist == \&"Pink Floyd\&" || year < 1970 && album =~ /live/i' *
.Pp
set the title "foo" to file.ogg:
.Dl Nm Fl t Ar 'foo' file.ogg
.Pp
set the year number 2000 to file.mp3:
.Dl Nm Fl y Ar 2000 file.mp3
.Sh AUTHORS
.An "Alexandre Perrin" Aq kaworu@kaworu.ch
.An "Baptiste Daroussin" Aq baptiste.daroussin@gmail.com
.Sh BUGS
.Sq filter
option can't compare
.Sq year
and
.Sq track
keywords.
