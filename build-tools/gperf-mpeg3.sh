#!/bin/sh

WHAT="$1"
GPERF="$2"
CC="$3"
CFLAGS="$4"

hdr() {
    cat <<EOF
/*
 * File generated by `basename "$0"` on `date`
 */
EOF
}

do_tokens() {
    echo '#include "id3/globals.h"' |
    ${CC} ${CFLAGS} -E - |
    awk '
        /enum _ID3_FrameID$/ {
           if (!done)
             start = 1
        }

        /^{$/ {
            if (start) {
                start = 0
                inbrace = 1
            }
        }

        inbrace {
            if ($0 ~ /[[:upper:]]+/) {
                gsub(/[[:space:],=0]/, "")
                key = $0
                sub(/^ID3FID_/, "", key)
                key = tolower(key)
                print key ", " $0
            }
        }

        /^};$/ {
            if (inbrace) {
                inbrace = 0
                done = 1
            }
        }'
}

if [ x"$WHAT" = x"header" ]; then
    cat <<EOF
#ifndef T_FTMPEG3_TOKENIZE_H
#define T_FTMPEG3_TOKENIZE_H
`hdr`

/* private helper */
ID3_FrameID t_ftmpeg3_tokenize(const char *str, int len);

#endif /* not T_FTMPEG3_TOKENIZE_H */
EOF
else
$GPERF -l -t -C -F ',0' --language=ANSI-C -Nt_ftmpeg3_tokenize_aux <<EOF
%{
`hdr`

#include <string.h>
#include "id3/globals.h"
#include "t_ftmpeg3_tokenize.h"

static const struct tok *
t_ftmpeg3_tokenize_aux(const char *str, unsigned int len);

%}

struct tok {
    const char *name;
    ID3_FrameID value;
};

%%
`do_tokens`
%%

ID3_FrameID
t_ftmpeg3_tokenize(const char *str, int len)
{
    if (len < 0)
        len = (int)strlen(str);

    if (len > 0) {
        const struct tok *t = t_ftmpeg3_tokenize_aux(str, len);
        if (t != NULL)
            return (t->value);
    }

    return (ID3FID_NOFRAME); /* 0 */
}

#if 0
Token List:
-----------
`do_tokens`
#endif
EOF
fi
